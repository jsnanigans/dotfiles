# -- navigation ----------------------------------------------------------------

# if you're running tmux within iTerm2
#   - and tmux is 1.9 or 1.9a
#   - and iTerm2 is configured to let option key act as +Esc
#   - and iTerm2 is configured to send [1;9A -> [1;9D for option + arrow keys
# then uncomment the following line to make Meta + arrow keys mapping work
#set -ga terminal-overrides "*:kUP3=\e[1;9A,*:kDN3=\e[1;9B,*:kRIT3=\e[1;9C,*:kLFT3=\e[1;9D"

# -- windows & pane creation ---------------------------------------------------

# new window retains current path, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify new-window bindings)
tmux_conf_new_window_retain_current_path=true

# new pane retains current path, possible values are:
#   - true (default)
#   - false
#   - disabled (do not modify split-window bindings)
tmux_conf_new_pane_retain_current_path=true

# new pane tries to reconnect ssh sessions, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify split-window bindings)
tmux_conf_new_pane_reconnect_ssh=false

# prompt for session name when creating a new session, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify new-session bindings)
tmux_conf_new_session_prompt=false

# -- clipboard -----------------------------------------------------------------

# in copy mode, copying selection also copies to the OS clipboard
#   - true
#   - false (default)
#   - disabled
# on macOS, this requires installing reattach-to-user-namespace, see README.md
# on Linux, this requires xsel or xclip
tmux_conf_copy_to_os_clipboard=true

# -- user customizations -------------------------------------------------------

# ============================================================================
# GENERAL SETTINGS
# ============================================================================
# History (override base config)
set -g history-limit 100000

# Mouse support
set -g mouse on
set -g @scroll-speed-num-lines-per-scroll 3

# Vi mode (already set in base, but reinforcing)
set -g status-keys vi
set -g mode-keys vi

# Default shell
set -g default-shell /opt/homebrew/bin/fish

# Status position
set -g status-position top

# Terminal optimizations (override base config)
set -sg escape-time 0                    # Faster command sequences (override)
set -g focus-events on                   # Enable focus events (already in base)
set -ga terminal-overrides ',xterm-256color:Tc'
set -ga terminal-overrides ',ghostty:Tc'
set -as terminal-features ',ghostty:RGB'

# Clipboard integration
set -g set-clipboard on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# Aggressive resize
setw -g aggressive-resize on

# Create new window in current directory
bind c new-window -c "#{pane_current_path}"

# -- tpm -----------------------------------------------------------------------

# while I don't use tpm myself, many people requested official support so here
# is a seamless integration that automatically installs plugins in parallel

# whenever a plugin introduces a variable to be used in 'status-left' or
# 'status-right', you can use it in 'tmux_conf_theme_status_left' and
# 'tmux_conf_theme_status_right' variables.

# by default, launching tmux will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_launch=true

# by default, reloading the configuration will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_reload=true

# by default, reloading the configuration will uninstall tpm and plugins when no
# plugins are enabled
#   - true (default)
#   - false
tmux_conf_uninstall_plugins_on_reload=false

# /!\ the tpm bindings differ slightly from upstream:
#   - installing plugins: <prefix> + I
#   - uninstalling plugins: <prefix> + Alt + u
#   - updating plugins: <prefix> + u

# /!\ do not add set -g @plugin 'tmux-plugins/tpm'
# /!\ do not add run '~/.tmux/plugins/tpm/tpm'

# to enable a plugin, use the 'set -g @plugin' syntax:
# visit https://github.com/tmux-plugins for available plugins
set -g @plugin 'tmux-plugins/tmux-copycat'      # Enhanced search
set -g @plugin 'tmux-plugins/tmux-open'         # Open files/URLs from tmux
set -g @plugin 'tmux-plugins/tmux-yank'         # Enhanced copy functionality
set -g @plugin 'laktak/extrakto'                # Fuzzy find text in tmux pane
set -g @plugin 'alexwforsythe/tmux-which-key'   # Display keybindings like which-key

# Copycat search bindings (after pressing prefix)
# prefix + / - search regex
# prefix + ctrl-f - search file
# prefix + ctrl-g - search git status files
# prefix + alt-h - search sha1/sha256 hashes
# prefix + ctrl-u - search URLs
# prefix + ctrl-d - search numbers
# prefix + alt-i - search IP addresses

# Extrakto settings
set -g @extrakto_split_direction 'v'
set -g @extrakto_split_size '15'
set -g @extrakto_grab_area 'window full'
set -g @extrakto_filter_order 'word line'

# Which-key settings
set -g @tmux-which-key-config "$DOTFILES/tmux/tmux-which-key.conf"

# Fix for $DOTFILES variable in loaded configs
run-shell "tmux setenv -g DOTFILES $HOME/dotfiles"

# Unbind keys that interfere with text navigation
unbind -n M-f  # Disable floating terminal on Alt/Option+f

# ============================================================================
# LOAD ORGANIZED CONFIG FILES
# ============================================================================
# Load vim-aware navigation (C-h/j/k/l)
source-file $DOTFILES/tmux/vim-navigation.conf

# Load custom keybindings
source-file $DOTFILES/tmux/keybindings.conf

# Load theme configuration
source-file $DOTFILES/tmux/theme.conf



### ðŸŽ¨ Powerline-Style Configuration

# Status bar customization
set -g status on
set -g status-interval 1
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour235 fg=colour137'

# Left side
set -g status-left-length 50
set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour238]#[fg=colour222,bg=colour238] #W #[fg=colour238,bg=colour235]'

# Right side
set -g status-right-length 100
set -g status-right '#[fg=colour238]#[fg=colour251,bg=colour238] %H:%M:%S #[fg=colour244]#[fg=colour232,bg=colour244] %Y-%m-%d #[fg=colour154]#[fg=colour232,bg=colour154] #h '

# Window status
setw -g window-status-format '#[fg=colour246,bg=colour235] #I:#W#F '
setw -g window-status-current-format '#[fg=colour235,bg=colour238]#[fg=colour81,bg=colour238] #I:#W#F #[fg=colour238,bg=colour235]'

# Pane borders
set -g pane-border-style 'fg=colour238'
set -g pane-active-border-style 'fg=colour154'

# Message style
set -g message-style 'fg=colour232 bg=colour154'

### ðŸš€ Productivity Boosters

# Floating terminal
# bind -n M-f display-popup -E -w 80% -h 80%

# Quick notes
bind h split-window -h "vim ~/notes.md"
